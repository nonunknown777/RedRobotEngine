<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.12.0"/>
    <errors>
        <error id="missingInclude" severity="information" msg="Include file: &quot;raylib.h&quot; not found." verbose="Include file: &quot;raylib.h&quot; not found.">
            <location file="src/main.cpp" line="14" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;raymath.h&quot; not found." verbose="Include file: &quot;raymath.h&quot; not found.">
            <location file="src/main.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/nodes/node.hpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/nodes/node.hpp" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;raylib.h&quot; not found." verbose="Include file: &quot;raylib.h&quot; not found.">
            <location file="src/nodes/node.hpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/references/resource.hpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;utils.hpp&quot; not found." verbose="Include file: &quot;utils.hpp&quot; not found.">
            <location file="src/main.cpp" line="18" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;temp_data.hpp&quot; not found." verbose="Include file: &quot;temp_data.hpp&quot; not found.">
            <location file="src/main.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;chrono&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;chrono&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/main.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/references/resource_loader.hpp" line="5" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Node&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/main.cpp">
            <location file="src/nodes/node.hpp" line="19" column="9"/>
            <symbol>Node</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Viewport&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Viewport&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/main.cpp">
            <location file="src/nodes/viewport.hpp" line="8" column="9"/>
            <symbol>Viewport</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Window&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Window&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/main.cpp">
            <location file="src/nodes/window.hpp" line="13" column="9"/>
            <symbol>Window</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/main.cpp">
            <location file="src/nodes/viewport.hpp" line="8" column="30"/>
            <symbol>name</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CanvasItem&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CanvasItem&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/nodes/canvas_item.cpp">
            <location file="src/nodes/canvas_item.hpp" line="10" column="9"/>
            <symbol>CanvasItem</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/nodes/canvas_item.cpp">
            <location file="src/nodes/canvas_item.hpp" line="10" column="32"/>
            <symbol>name</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;utils.hpp&quot; not found." verbose="Include file: &quot;utils.hpp&quot; not found.">
            <location file="src/nodes/control.cpp" line="2" column="0"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;position&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;position&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="src/nodes/control.cpp">
            <location file="src/nodes/control.cpp" line="5" column="5"/>
            <symbol>position</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Control&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Control&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/nodes/control.cpp">
            <location file="src/nodes/control.hpp" line="28" column="9"/>
            <symbol>Control</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/nodes/control.cpp">
            <location file="src/nodes/control.cpp" line="4" column="30"/>
            <symbol>name</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;MenuBar&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;MenuBar&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/nodes/menu_bar.cpp">
            <location file="src/nodes/menu_bar.hpp" line="8" column="9"/>
            <symbol>MenuBar</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;set_name&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;set_name&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/nodes/menu_bar.cpp">
            <location file="src/nodes/menu_bar.hpp" line="11" column="14" info="Function in derived class"/>
            <location file="src/nodes/node.hpp" line="23" column="22" info="Virtual function in base class"/>
            <symbol>set_name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/nodes/menu_bar.cpp">
            <location file="src/nodes/menu_bar.cpp" line="3" column="30"/>
            <symbol>name</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/nodes/node.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/nodes/node.cpp" line="3" column="0"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;children&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;children&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="src/nodes/node.cpp">
            <location file="src/nodes/node.cpp" line="41" column="5"/>
            <symbol>children</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/nodes/node.cpp">
            <location file="src/nodes/node.cpp" line="38" column="24"/>
            <symbol>name</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;raylib.h&quot; not found." verbose="Include file: &quot;raylib.h&quot; not found.">
            <location file="src/references/style_box_flat.hpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/nodes/panel.cpp" line="2" column="0"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Panel&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Panel&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="src/nodes/panel.cpp">
            <location file="src/nodes/panel.cpp" line="6" column="5"/>
            <symbol>Panel</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Panel&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Panel&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="src/nodes/panel.cpp">
            <location file="src/nodes/panel.cpp" line="6" column="5"/>
            <symbol>Panel</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Panel&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Panel&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/nodes/panel.cpp">
            <location file="src/nodes/panel.hpp" line="10" column="5"/>
            <symbol>Panel</symbol>
        </error>
        <error id="uselessOverride" severity="style" msg="The function &apos;empty&apos; overrides a function in a base class but is identical to the overridden function" verbose="The function &apos;empty&apos; overrides a function in a base class but is identical to the overridden function" file0="src/nodes/panel.cpp">
            <location file="src/references/style_box_flat.hpp" line="17" column="10" info="Function in derived class"/>
            <location file="src/references/style_box.hpp" line="17" column="18" info="Virtual function in base class"/>
            <symbol>empty</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/nodes/panel.cpp">
            <location file="src/nodes/panel.cpp" line="7" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/nodes/panel.cpp">
            <location file="src/nodes/panel.cpp" line="17" column="56"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/nodes/panel.cpp">
            <location file="src/nodes/panel.cpp" line="5" column="26"/>
            <symbol>name</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Popup&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Popup&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/nodes/popup.cpp">
            <location file="src/nodes/popup.hpp" line="10" column="5"/>
            <symbol>Popup</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/nodes/popup_menu.cpp" line="3" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;PopupMenu&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;PopupMenu&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/nodes/popup_menu.cpp">
            <location file="src/nodes/popup_menu.hpp" line="8" column="5"/>
            <symbol>PopupMenu</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/nodes/tree.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;utils.hpp&quot; not found." verbose="Include file: &quot;utils.hpp&quot; not found.">
            <location file="src/nodes/tree.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;temp_data.hpp&quot; not found." verbose="Include file: &quot;temp_data.hpp&quot; not found.">
            <location file="src/nodes/tree.cpp" line="5" column="0"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;SceneTree&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;SceneTree&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="src/nodes/tree.cpp">
            <location file="src/nodes/tree.cpp" line="12" column="5"/>
            <symbol>SceneTree</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;SceneTree&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;SceneTree&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="src/nodes/tree.cpp">
            <location file="src/nodes/tree.cpp" line="12" column="5"/>
            <symbol>SceneTree</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VBoxContainer&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VBoxContainer&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/nodes/tree.cpp">
            <location file="src/nodes/v_box_container.hpp" line="9" column="5"/>
            <symbol>VBoxContainer</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/nodes/tree.cpp">
            <location file="src/nodes/tree.cpp" line="18" column="6"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/nodes/v_box_container.cpp">
            <location file="src/nodes/v_box_container.cpp" line="3" column="42"/>
            <symbol>name</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="src/nodes/window.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;temp_data.hpp&quot; not found." verbose="Include file: &quot;temp_data.hpp&quot; not found.">
            <location file="src/nodes/window.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;raylib.h&quot; not found." verbose="Include file: &quot;raylib.h&quot; not found.">
            <location file="src/nodes/window.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;utils.hpp&quot; not found." verbose="Include file: &quot;utils.hpp&quot; not found.">
            <location file="src/references/resource_loader.cpp" line="3" column="0"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;bg_color&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;bg_color&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="src/references/style_box_flat.cpp">
            <location file="src/references/style_box_flat.cpp" line="4" column="5"/>
            <symbol>bg_color</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;_ready&apos; is never used." verbose="The function &apos;_ready&apos; is never used." cwe="561">
            <location file="src/nodes/node.cpp" line="5" column="0"/>
            <symbol>_ready</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;_unhandled_input&apos; is never used." verbose="The function &apos;_unhandled_input&apos; is never used." cwe="561">
            <location file="src/nodes/node.cpp" line="18" column="0"/>
            <symbol>_unhandled_input</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_children&apos; is never used." verbose="The function &apos;get_children&apos; is never used." cwe="561">
            <location file="src/nodes/node.cpp" line="60" column="0"/>
            <symbol>get_children</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;load&apos; is never used." verbose="The function &apos;load&apos; is never used." cwe="561">
            <location file="src/references/resource_loader.cpp" line="6" column="0"/>
            <symbol>load</symbol>
        </error>
    </errors>
</results>
